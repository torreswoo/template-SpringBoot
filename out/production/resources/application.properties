# info 서버 표시 정보
server.port= 8080
spring.application.name= torres-springboot-template
info.app.name= torres-springboot-template-application
info.app.version= 0.1.0
info.app.description= Torres SpringBoot template project
info.developer.name= Torres Woo
info.developer.email=torreswoo@gmail.com
info.developer.url=https://torreswoo.github.io/

# SpringBoot | Actuator
management.security.enabled= false
endpoints.health.sensitive= false
endpoints.shutdown.enabled= false

# SpringBoot | devtools
spring.devtools.livereload.enabled=true

# SpringBoot | remote shell
# - usage : $> ssh user@localhost -p 2000  // $ dashboard, metrics, thread top
management.shell.auth.simple.user.name= user
management.shell.auth.simple.user.password= 1234
management.shell.ssh.enabled=true
management.shell.ssh.port=2000

# SpringBoot | Admin
# - usage : http://localhost:8080
# - Admin Server에 등록할 URL (현재는 localhost가 Admin)
#spring.boot.admin.url= http://localhost:8080
#spring.boot.admin.client.enabled= true

# static resoruce
#spring.resources.static-locations=classpath:/public/,classpath:/resources/,classpath:/static/

# jolokia (defalut)
endpoints.jolokia.enabled=true
endpoints.jolokia.path=/jolokia
endpoints.jolokia.sensitive=false
jolokia.config.debug= false
#spring.datasource.jmx-enabled=true

# thymeleaf (defalut)
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5

# logging
logging.config=classpath:logback.groovy